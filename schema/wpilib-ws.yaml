asyncapi: 2.0.0
info:
  title: WPILib WebSocket Remote Endpoint API
  version: "1.0.0"
  description: |
    API to route WPILib HAL calls over WebSockets.

  license:
    name: MIT

channels:
  wpilibws:
    description: General channel for WPILib WebSocket messages
    publish:
      operationId: wpilibwsPublish
      message:
        $ref: "#/components/messages/wpilibwsMsg"
    subscribe:
      operationId: wpilibwsSubscribe
      message:
        $ref: "#/components/messages/wpilibwsMsg"


components:
  messages:
    wpilibwsMsg:
      title: WPILib WebSocket Message
      summary: Message envelope. Note that the "data" field contains a diff of the current state of a particular device. E.g. If only the "value" changes for a DIO device, then only the "<>value" field will be sent.
      contentType: application/json
      payload:
        $ref: "#/components/schemas/wpilibwsMsgPayload"

  schemas:
    wpilibwsMsgPayload:
      type: object
      required:
      - type
      - device
      examples:
      - type: PWM
        device: "1"
        data:
          "&lt;speed": 0.5
      - type: DIO
        device: "3"
        data:
          "&lt;init": true

      properties:
        type:
          type: string
          description: Device Type (e.g. DIO/AO/AI/PWM/Encoder etc)
        device:
          type: string
          description: Device Identifier (usually channel)
        data:
          description: Payload for the message. Note that not all fields for a particular message will get sent. Only the diff of the current state of the particular device will be sent.
          oneOf:
            - $ref: "#/components/schemas/dioData"
            - $ref: "#/components/schemas/ainData"
            - $ref: "#/components/schemas/aoutData"
            - $ref: "#/components/schemas/driverstationData"
            - $ref: "#/components/schemas/joystickData"
            - $ref: "#/components/schemas/encoderData"
            - $ref: "#/components/schemas/pwmData"
            - $ref: "#/components/schemas/relayData"
            - $ref: "#/components/schemas/roborioData"

    dioData:
      type: object
      description: "DIO Data (type: DIO, device: channel number)"
      properties:
        <init:
          type: boolean
          description: Whether or not this DIO channel has been initialized
        <>value:
          type: boolean
          description: Current value of this DIO channel
        <pulse_length:
          type: integer
        <input:
          type: boolean
          description: Whether or not this DIO channel has been initialized as an input

    ainData:
      type: object
      description: "Analog In Data (type: AI, device: channel number)"
      properties:
        <init:
          type: boolean
          description: Whether or not this Analog In channel has been initialized
        <avg_bits:
          type: integer
        <oversample_bits:
          type: integer
        ">voltage":
          type: number
          description: The current input voltage of this Analog In channel
        <accum_init:
          type: boolean
          description: Whether or not the accumulator for this Analog In channel has been initialized
        ">accum_value":
          type: number
          description: Current accumulator value
        ">accum_count":
          type: number
        <accum_center:
          type: number
        <accum_deadband:
          type: number

    aoutData:
      type: object
      description: "Analog Out Data (type: AO, device: channel number)"
      properties:
        <init:
          type: boolean
          description: Whether or not this Analog Out channel has been initialized
        <voltage:
          type: number
          description: Current output voltage of this Analog Out channel

    driverstationData:
      type: object
      description: "DriverStation Data (type: DriverStation)"
      properties:
        ">enabled":
          type: boolean
          description: Whether or not the driver station is enabled
        ">autonomous":
          type: boolean
          description: Whether or not to go into autonomous mode (when enabled)
        ">test":
          type: boolean
          description: Whether or not to go into test mode (when enabled)
        ">estop":
          type: boolean
          description: Whether or not the robot has been emergency stopped
        ">fms":
          type: boolean
          description: Whether or not the driver station is connected to FMS
        ">ds":
          type: boolean
          description: Whether or not the Driver Station is connected to the robot
        <match_time:
          type: number
          description: Current elapsed match time
        ">station":
          type: string
          enum:
            - red1
            - red2
            - red3
            - blue1
            - blue2
            - blue3
          description: Driver Station Position identifier
        ">new_data":
          type: boolean
          description: Set whenever there is new DS data available

    encoderData:
      type: object
      description: "Encoder Data (type: Encoder, device: FPGA encoder number)"
      properties:
        <init:
          type: boolean
          description: Whether or not this encoder channel is initialized
        <channel_a:
          type: number
          description: The Digital IO channel used for channel A
        <channel_b:
          type: number
          description: The Digital IO channel used for channel B
        ">count":
          type: integer
          description: Current count of the encoder
        ">period":
          type: number
          description: Current period of the encoder
        <reset:
          type: boolean
          description: Whether or not this encoder should be reset
        <reverse_direction:
          type: boolean
          description: Whether or not this encoder should reverse its counting direction
        <samples_to_avg:
          type: integer
          description: Number of samples to average over

    pwmData:
      type: object
      description: "PWM Data (type: PWM, device: channel number)"
      properties:
        <init:
          type: boolean
          description: Whether or not this PWM channel is initialized
        <speed:
          type: number
          description: Speed value of this PWM channel
          minimum: -1.0
          maximum: 1.0
        <position:
          type: number
          description: Position value of this PWM channel
          minimum: 0.0
          maximum: 1.0
        <raw:
          type: integer
          description: Raw value of this PWM channel
          minimum: 0
          maximum: 255
        <period_scale:
          type: number
          description: Period scale factor
        <zero_latch:
          type: boolean

    relayData:
      type: object
      description: "Relay data (type: Relay, device: channel number)"
      properties:
        <init_fwd:
          type: boolean
          description: Whether or not the forward direction of this relay is initialized
        <init_rev:
          type: boolean
          description: Whether or not the reverse direction of this relay is initialized
        <fwd:
          type: boolean
          description: Whether or not the forward direction of this relay is active
        <rev:
          type: boolean
          description: Whether or not the reverse direction of this relay is active

    roborioData:
      type: object
      description: "RoboRIO Data (type: RoboRIO)"
      properties:
        ">fpga_button":
          type: boolean
          description: Whether or not the FPGA button on the RoboRIO is active
        ">vin_voltage":
          type: number
          description: Input voltage
        ">vin_current":
          type: number
          description: Input Current
        ">6v_voltage":
          type: number
          description: Voltage on the 6V rail
        ">6v_current":
          type: number
          description: Current on the 6V rail
        ">6v_active":
          type: boolean
          description: Whether or not the 6V rail is active
        ">6v_faults":
          type: number
          description: Bitmask of faults on the 6V rail
        ">5v_voltage":
          type: number
          description: Voltage on the 5V rail
        ">5v_current":
          type: number
          description: Current on the 5V rail
        ">5v_active":
          type: boolean
          description: Whether or not the 5V rail is active
        ">5v_faults":
          type: number
          description: Bitmask of faults on the 5V rail
        ">3v3_voltage":
          type: number
          description: Voltage on the 3.3V rail
        ">3v3_current":
          type: number
          description: Current on the 3.3V rail
        ">3v3_active":
          type: boolean
          description: Whether or not the 3.3V rail is active
        ">3v3_faults":
          type: number
          description: Bitmask of faults on the 3.3V rail

    joystickData:
      type: object
      description: "Joystick Properties (type: Joystick, device: joystick number)"
      properties:
        ">buttons":
          description: State of all buttons on this joystick
          type: array
          items:
            type: boolean
            description: Pressed state of an individual button
        ">povs":
          description: State of all POV switches on this joystick
          type: array
          items:
            type: number
            description: Angle of an individual POV switch present on this joystick
        ">axes":
          description: State of all axes on this joystick
          type: array
          items:
            type: number
            description: Value of an individual axis on this joystick
            minimum: -1.0
            maximum: 1.0
